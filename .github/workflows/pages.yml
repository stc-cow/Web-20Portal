name: Deploy Builder.io Site to GitHub Pages (Fixed PNPM)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    name: Build Builder.io Site
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      # ‚úÖ Fix: install PNPM manually and verify it exists
      - name: Install PNPM manually
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm --version

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile || pnpm install

      - name: Build Builder.io site
        run: |
          echo "üöÄ Starting Builder.io build"
          cd code
          pnpm run build || npm run build || echo "‚ö†Ô∏è No build script found, skipping build"
          cd ..
          mkdir -p ./docs
          # ‚úÖ Handle project output (dist/spa) and common alternatives
          if [ -d ./code/dist/spa ]; then
            cp -r ./code/dist/spa/* ./docs/
            echo "‚úÖ Copied from code/dist/spa"
          elif [ -d ./dist/spa ]; then
            cp -r ./dist/spa/* ./docs/
            echo "‚úÖ Copied from dist/spa"
          elif [ -d ./code/dist ]; then
            cp -r ./code/dist/* ./docs/
            echo "‚úÖ Copied from code/dist"
          elif [ -d ./dist ]; then
            cp -r ./dist/* ./docs/
            echo "‚úÖ Copied from dist"
          else
            echo "‚ö†Ô∏è No build folder found"
          fi

          # ‚úÖ SPA fallback for GitHub Pages deep links - CRITICAL!
          if [ -f ./docs/index.html ]; then
            cp ./docs/index.html ./docs/404.html
            echo "‚úÖ Created 404.html for SPA routing"
            ls -la ./docs/ | grep -E "index|404"
          else
            echo "‚ùå ERROR: docs/index.html not found!"
            find . -name "index.html" -type f
          fi

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
